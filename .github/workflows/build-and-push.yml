name: Docker自動ビルドとプッシュ

on:
  push:
    branches: [ main, develop ]    # mainとdevelopブランチへのプッシュ時
    tags: [ 'v*' ]                # バージョンタグ作成時
  pull_request:
    branches: [ main ]             # mainブランチへのPR時

env:
  REGISTRY: ghcr.io              # GitHub Container Registry
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read              # リポジトリ読み取り権限
      packages: write            # パッケージ書き込み権限
    
    steps:
    - name: リポジトリをチェックアウト
      uses: actions/checkout@v4
    
    - name: Docker Buildxをセットアップ
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64    # マルチアーキテクチャ対応
    
    - name: Container Registryにログイン
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: イメージメタデータを抽出
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch                    # ブランチ名をタグに
          type=ref,event=pr                       # PR番号をタグに
          type=semver,pattern={{version}}         # セマンティックバージョン
          type=semver,pattern={{major}}.{{minor}} # メジャー.マイナーバージョン
          type=raw,value=latest,enable={{is_default_branch}}  # メインブランチにlatestタグ
        labels: |
          org.opencontainers.image.description=YouTube Downloader Discord Bot
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.licenses=MIT
    
    - name: Dockerイメージをビルドしてプッシュ
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64        # マルチアーキテクチャビルド
        push: true                                # Container Registryにプッシュ
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha                      # GitHub Actionsキャッシュから読み込み
        cache-to: type=gha,mode=max              # GitHub Actionsキャッシュに保存
        build-args: |
          BUILDKIT_INLINE_CACHE=1
